---
title: "COGS 219 Behavioral Study"
author: "James Mannix"
format: html
editor: visual
---

```{r}
#| label: Load R libraries
#| echo: false # hides code in rendered doc
#| message: false # hides messages in code
library(osfr)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ez)
library(rjson)
library(jsonlite)
library(lme4)
library(lmerTest)
library(sjPlot)
library(car)
```

```{r}
#| label: Load the data from OSF
#| include: false # hides data objects generated by code
#| echo: false
osf_retrieve_node("x38yn") %>%
  osf_ls_files(n_max = "Inf") %>%
  osf_download(path="data/", conflicts="skip")
```

```{r}
#| label: Concatenate data files into one file
#| echo: false
files <- list.files(path = "data/", full.names = T)
data <- lapply(files, fromJSON) %>% 
  bind_rows()
```

```{r}
#| label: Clean up data frame
#| echo: false
data.clean <- data %>% 
  select(-c("success", "timeout", "failed_images", "failed_audio", "failed_video", "trial_type", "trial_index", "time_elapsed", "internal_node_id", "study_id", "session_id", "stimulus")) %>% 
  filter(phase == "test", 
         task == "choose")
```

## Methods

```{r}
#| label: Count the number of subjects
#| echo: false
n.subjects <- data %>%
  pull(subject_id) %>%
  unique() %>%
  length()
```

### Participants

`r n.subjects` Prolific members participated in the study.

### Procedure

Reddit and stuff.

```{r}
#| label: filter failed participants; trigger the check screen more than 3 times
#| echo: false

data.exclude <- data.clean %>%
  group_by(subject_id) %>%
  mutate(n_pass = sum(check == FALSE)) %>%
  filter(n_pass > 3)

exclude.subjects <- data.exclude %>%
  pull(subject_id) %>%
  unique() %>%
  length()

data.filtered <- data.clean %>%
  filter(!subject_id %in% exclude.subjects) %>%
  filter(check == TRUE)
```

```{r}
#| label: tidy up the data
#| echo: false

data.tidyup <- data.filtered %>% 
  pivot_longer(cols = starts_with("left_") | starts_with("right_"), 
               names_to = c("pos", ".value"), names_sep = "_") %>%
  mutate(revealed = ifelse(((response == "arrowleft" & pos == "left") | (response == "arrowright" & pos == "right")), TRUE, FALSE)) %>%
  select(subject_id, pos, upvote, blur, img, revealed) 
```

```{r}
#| label: upvote graph
#| echo: false


graph.prep <- data.tidyup %>%
  group_by(upvote) %>%
  summarize(percent = mean(revealed == TRUE)) %>%
  ungroup()

ggplot(graph.prep, aes(x = upvote, y = percent))+
  geom_point() +
  stat_smooth(method = "loess", se = TRUE) +
  xlab("Upvote Count") +
  ylab("# of reveals / # of appearance") 

```

```{r}
#| label: blur graph
#| echo: false


graph.prep2 <- data.tidyup %>%
  group_by(blur) %>%
  summarize(percent = mean(revealed == TRUE)) %>%
  ungroup()

ggplot(graph.prep2, aes(x = blur, y = percent))+
  geom_point() +
  stat_smooth(method = "loess", se = TRUE) +
  xlab("Blurriness") +
  ylab("# of reveals / # of appearance") 

```

```{r}
#| label: Mixed Effect Model prep
#| echo: false

data.lme <- data.filtered %>%
  select(response, subject_id, left_upvote, right_upvote, left_blur, right_blur, left_img, right_img) %>%
  mutate(delta_upvote = left_upvote-right_upvote,
         delta_upvote = factor(delta_upvote),
         delta_blur = left_blur-right_blur,
         delta_blur = factor(delta_blur),
         response = dummy(response),
         subject_id = factor(subject_id),
         left_upvote = factor(left_upvote),
         right_upvote = factor(right_upvote),
         left_blur = factor(left_blur),
         right_blur = factor(right_blur),
         left_img = factor(left_img),
         right_img = factor(right_img))

lme_result = glmer(response ~
                      left_upvote +
                      right_upvote +
                      left_blur +
                      right_blur +
                      (1 | subject_id),
                    family = binomial,
                    data = data.lme,
                    nAGQ=0,
                    control=glmerControl(optimizer = "nloptwrap")
                    )
print(lme_result)
anova(lme_result)
plot(lme_result)
```
